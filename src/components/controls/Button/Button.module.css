.Button {
  display: flex;
  justify-content: center;
  align-items: stretch;
}
.Button:not(:is([disabled], .visualDisabled, .loading)) .inner {
  cursor: pointer;
}
@media (hover: hover) {
  .Button:not(:is([disabled], .visualDisabled, .loading)):hover .inner {
    box-shadow: 0 0 15px color-mix(in srgb, var(--c-accent), transparent);
  }
}
.Button:not(:is([disabled], .visualDisabled, .loading)):focus-visible .inner {
  outline: 2px solid var(--c-accent);
  outline-offset: 2px;
}
.Button:not(:is([disabled], .visualDisabled, .loading)):active .inner {
  transition: 0.05s;
  translate: 0 3px;
  box-shadow: none;
}
.Button:is([disabled], .visualDisabled) .inner {
  background-color: color-mix(in srgb, var(--c-accent) 60%, white);
  cursor: not-allowed;
}
.Button:is([disabled], .visualDisabled) .content {
  opacity: 0.7;
}
@media (hover: hover) {
  .Button:is([disabled], .visualDisabled):hover .disableReason:not(:empty) {
    opacity: 1;
  }
}
.Button.loading .inner {
  background-color: color-mix(in srgb, var(--c-accent), black);
  cursor: progress;
}
.Button.loading .content {
  opacity: 0.7;
}

.inner {
  flex-grow: 1;
  padding: 10px;
  background-color: var(--c-accent);
  color: white;
  transition: translate 0.2s, background-color 0.2s, box-shadow 0.2s;
}

.content {
  transition: opacity 0.2s;
}

/*# sourceMappingURL=Button.module.css.map */
